ARG CUGRAPH_VERSION=22.02
ARG CUDA_VERSION=11.5
ARG PY_VERSION=3.8
ARG MG_VERSION=2.2.1

FROM rapidsai/rapidsai-dev:${CUGRAPH_VERSION}-cuda${CUDA_VERSION}-devel-ubuntu20.04-py${PY_VERSION} as cugraph-dev

USER root

ARG MG_VERSION
ARG PY_VERSION
ENV MG_VERSION ${MG_VERSION}
ENV PY_VERSION ${PY_VERSION}

# Prevent from linking the Conda environment
ENV LD_LIBRARY_PATH=/usr/local/nvidia/lib:/usr/local/nvidia/lib64:/usr/local/cuda/lib64:/usr/local/lib
RUN echo ${PY_VERSION}

# NVIDIA key rotation
RUN rm /etc/apt/sources.list.d/cuda.list

# Install newest CMake (cuGraph requires >= 20.01)
RUN apt update && \
    apt install -y software-properties-common lsb-release wget && \
    apt clean all
RUN wget -qO - https://apt.kitware.com/keys/kitware-archive-latest.asc | apt-key add -
RUN apt-add-repository "deb https://apt.kitware.com/ubuntu/ $(lsb_release -cs) main"
ENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/bin/cmake:/usr/lib/cmake

# Essentials for production/dev
RUN apt-get update && apt-get install -y \
    libcurl4        `memgraph` \
    libpython${PY_VERSION}   `memgraph` \
    libssl1.1       `memgraph` \
    libssl-dev       `memgraph` \
    openssl         `memgraph` \
    build-essential `mage-memgraph` \
    cmake           `mage-memgraph` \
    curl            `mage-memgraph` \
    g++             `mage-memgraph` \
    python3         `mage-memgraph` \
    python3-pip     `mage-memgraph` \
    python3-setuptools     `mage-memgraph` \
    python3-dev     `mage-memgraph` \
    uuid-dev        `mage-memgraph` \
    clang           `mage-memgraph` \
    git             `mage-memgraph` \
    --no-install-recommends \
    # Download and install Memgraph
    && curl https://download.memgraph.com/memgraph/v${MG_VERSION}/ubuntu-20.04/memgraph_${MG_VERSION}-1_amd64.deb --output memgraph.deb \
    && dpkg -i memgraph.deb \
    && rm memgraph.deb \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Memgraph listens for Bolt Protocol on this port by default.
EXPOSE 7687

FROM cugraph-dev as dev

# Copy and build MAGE
WORKDIR /mage
COPY . /mage

RUN curl https://sh.rustup.rs -sSf | sh -s -- -y && \
    export PATH="/root/.cargo/bin:${PATH}" && \ 
    python3 -m  pip install -r /mage/python/requirements.txt && \  
    python3 /mage/setup build \ 
            --gpu \
            --cpp-build-flags MAGE_CUGRAPH_ROOT=/opt/conda/envs/rapids/ \
            -p /usr/lib/memgraph/query_modules/ 

USER memgraph
ENTRYPOINT ["/usr/lib/memgraph/memgraph"]

FROM rapidsai/rapidsai:${CUGRAPH_VERSION}-cuda${CUDA_VERSION}-runtime-ubuntu20.04-py${PY_VERSION} as prod

USER root
ARG MG_VERSION
ARG PY_VERSION
ENV MG_VERSION ${MG_VERSION}
ENV PY_VERSION ${PY_VERSION}

# Copy modules
COPY --from=dev /usr/lib/memgraph/query_modules/ /usr/lib/memgraph/query_modules/

# Copy python build
COPY --from=dev /usr/local/lib/python${PY_VERSION}/ /usr/local/lib/python${PY_VERSION}/

# NVIDIA key rotation
RUN rm /etc/apt/sources.list.d/cuda.list

# Download and install Memgraph
RUN apt-get update && apt-get install -y \
    libcurl4        `memgraph` \
    libpython${PY_VERSION}   `memgraph` \
    libssl1.1       `memgraph` \
    libssl-dev       `memgraph` \
    openssl         `memgraph` \
    python3         `mage-memgraph` \
    python3-pip         `mage-memgraph` \
    python3-setuptools     `mage-memgraph` \
    python3-dev     `mage-memgraph` \
    && curl https://download.memgraph.com/memgraph/v${MG_VERSION}/ubuntu-20.04/memgraph_${MG_VERSION}-1_amd64.deb --output memgraph.deb \
    && dpkg -i memgraph.deb \
    && rm memgraph.deb \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

RUN export PATH="/usr/local/lib/python${PY_VERSION}:${PATH}"

RUN rm -rf /mage \
    && export PATH="/usr/local/lib/python${PY_VERSION}:${PATH}" \
    && apt-get -y --purge autoremove git curl python3-pip python3-dev cmake build-essential \
    && apt-get clean


USER memgraph
ENTRYPOINT ["/usr/lib/memgraph/memgraph"]