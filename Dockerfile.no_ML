ARG PY_VERSION_DEFAULT=3.12
ARG MGBUILD_IMAGE

FROM $MGBUILD_IMAGE as builder

USER root

ARG TARGETARCH
ARG PY_VERSION_DEFAULT
ENV PY_VERSION ${PY_VERSION_DEFAULT}

# Essentials for production/dev
RUN apt-get update && apt-get install -y \
    libcurl4        `memgraph` \
    libpython${PY_VERSION}   `memgraph` \
    libssl-dev       `memgraph` \
    openssl         `memgraph` \
    build-essential `mage-memgraph` \
    cmake           `mage-memgraph` \
    curl            `mage-memgraph` \
    g++             `mage-memgraph` \
    python3         `mage-memgraph` \
    python3-pip     `mage-memgraph` \
    python3-setuptools     `mage-memgraph` \
    python3-dev     `mage-memgraph` \
    clang           `mage-memgraph` \
    git             `mage-memgraph` \
    unixodbc-dev        `mage-memgraph` \
    libboost-all-dev `mage-memgraph` \
    uuid-dev \
    gdb \
    procps \
    libc6-dbg \
    --no-install-recommends \
    && ln -s /usr/bin/$(ls /usr/bin | grep perf) /usr/bin/perf \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

COPY memgraph-${TARGETARCH}.deb .

RUN dpkg -i memgraph-${TARGETARCH}.deb && rm memgraph-${TARGETARCH}.deb 

ENV LD_LIBRARY_PATH /usr/lib/memgraph/query_modules

# Memgraph listens for Bolt Protocol on this port by default.
EXPOSE 7687

FROM builder as dev

ARG BUILD_TYPE=Release

WORKDIR /mage
COPY . /mage

# hacks so we can do everything under the `memgraph` user
RUN chown -R memgraph: /mage && \
    mkdir -pv /usr/lib/memgraph/query_modules && \
    chown -R memgraph: /usr/lib/memgraph/query_modules
USER memgraph

#MAGE
SHELL ["/bin/bash", "-c"]
RUN source /opt/toolchain-v6/activate && curl https://sh.rustup.rs -sSf | sh -s -- -y \
    && export PATH="$HOME/.cargo/bin:${PATH}" \
    && python3 -m  pip install -r /mage/python/tests/requirements.txt --break-system-packages \
    && python3 -m  pip install -r /mage/python/requirements_no_ml.txt --break-system-packages \
    && python3 -m  pip install --no-cache-dir -r /usr/lib/memgraph/auth_module/requirements.txt --break-system-packages \
    && python3 /mage/setup build -p /usr/lib/memgraph/query_modules/ --no-ml --cpp-build-flags CMAKE_BUILD_TYPE=${BUILD_TYPE} \
    && chown -R memgraph: /mage/e2e

#remove the toolchain
USER root
RUN rm -rf /opt/toolchain-v6

USER memgraph
ENTRYPOINT ["/usr/lib/memgraph/memgraph"]
CMD [""]



FROM ubuntu:24.04 as prod

USER root

ARG TARGETARCH
ARG PY_VERSION_DEFAULT
ENV PY_VERSION ${PY_VERSION_DEFAULT}

# Install only runtime dependencies that are needed
RUN apt-get update && apt-get install -y \
    libcurl4 \
    libpython${PY_VERSION} \
    libssl-dev \
    openssl \
    python3 \
    python3-pip \
    g++ \
    python3-setuptools \
    unixodbc-dev        `mage-memgraph` \
    libboost-all-dev `mage-memgraph` \
    uuid-dev \
    gdb \
    procps \
    libc6-dbg \
    --no-install-recommends && \
    rm -rf /var/lib/apt/lists/*

# Create the memgraph user
RUN useradd -m memgraph

# install memgraph
COPY memgraph-${TARGETARCH}.deb .
RUN dpkg -i memgraph-${TARGETARCH}.deb && rm memgraph-${TARGETARCH}.deb 
ENV LD_LIBRARY_PATH /usr/lib/memgraph/query_modules

#copy modules
COPY --from=dev /usr/lib/memgraph/query_modules/ /usr/lib/memgraph/query_modules/
COPY --from=dev /usr/lib/memgraph/auth_module/ /usr/lib/memgraph/auth_module/

#copy python build
COPY --from=dev /usr/local/lib/python${PY_VERSION}/ /usr/local/lib/python${PY_VERSION}/

#copy e2e tests
COPY --from=dev /mage/e2e/ /mage/e2e/

RUN mv /mage/e2e /e2e/ \
    && rm -rf /mage/* \
    && mv /e2e/ /mage/ \
    && chown -R memgraph: /mage/e2e \
    && export PATH="/usr/local/lib/python${PY_VERSION}:${PATH}"

USER memgraph
EXPOSE 7687

ENTRYPOINT ["/usr/lib/memgraph/memgraph"]
CMD [""]
