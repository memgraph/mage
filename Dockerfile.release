FROM ubuntu:24.04 as base

USER root

ARG TARGETARCH
ARG PY_VERSION_DEFAULT=3.12
ARG MAGE_COMMIT
ARG BUILD_TYPE
ENV BUILD_TYPE=${BUILD_TYPE}
ENV PY_VERSION ${PY_VERSION_DEFAULT}
ENV MAGE_COMMIT=${MAGE_COMMIT}
ARG CUSTOM_MIRROR
ARG CUDA=false
ARG CACHE_PRESENT=false

# Install runtime requirements for MAGE
COPY scripts/install_runtime_requirements.sh /install_runtime_requirements.sh
RUN chmod +x /install_runtime_requirements.sh && \
    /install_runtime_requirements.sh --ci --target-arch ${TARGETARCH} \
      --py-version ${PY_VERSION} --custom-mirror ${CUSTOM_MIRROR} \
      --cuda ${CUDA} && \
    rm /install_runtime_requirements.sh

# install memgraph
COPY memgraph-${TARGETARCH}.deb .

# fix `memgraph` UID and GID for compatibility with previous Debian releases
RUN groupadd -g 103 memgraph && \
    useradd -u 101 -g memgraph -m -d /home/memgraph -s /bin/bash memgraph && \
    dpkg -i memgraph-${TARGETARCH}.deb && \
    rm memgraph-${TARGETARCH}.deb 

ENV LD_LIBRARY_PATH /usr/lib/memgraph/query_modules

# Copy modules
RUN mkdir -p /usr/lib/memgraph/query_modules/
COPY mage.tar.gz /tmp/mage.tar.gz
RUN tar -xzvf /tmp/mage.tar.gz -C /usr/lib/memgraph/query_modules/ && rm /tmp/mage.tar.gz

# copy script to convert to dev container
COPY make-dev-container.sh /make-dev-container.sh
COPY python/requirements.txt /tmp/python-requirements.txt
COPY cpp/memgraph/src/auth/reference_modules/requirements.txt /tmp/auth_module-requirements.txt

USER memgraph
COPY --chown=memgraph:memgraph ./scripts/install_python_requirements.sh /home/memgraph/install_python_requirements.sh
RUN chmod +x /home/memgraph/install_python_requirements.sh && \
    ./home/memgraph/install_python_requirements.sh --arch ${TARGETARCH} --ci --cuda ${CUDA} --cache-present ${CACHE_PRESENT} && \
    rm /home/memgraph/install_python_requirements.sh

FROM base as prod

USER root

ARG TARGETARCH
ARG PY_VERSION_DEFAULT=3.12
ARG MAGE_COMMIT
ARG BUILD_TYPE
ENV BUILD_TYPE=${BUILD_TYPE}
ENV PY_VERSION ${PY_VERSION_DEFAULT}
ENV MAGE_COMMIT=${MAGE_COMMIT}
ARG CUSTOM_MIRROR

RUN if [ -n "$CUSTOM_MIRROR" ]; then \
      sed -E -i \
        -e "/^URIs:/ s#${CUSTOM_MIRROR}/ubuntu/#https://archive.ubuntu.com/ubuntu/#g" \
        -e "/^URIs:/ s#${CUSTOM_MIRROR}/ubuntu/#https://security.ubuntu.com/ubuntu/#g" \
        /etc/apt/sources.list.d/ubuntu.sources; \
    fi

USER memgraph
EXPOSE 7687

ENTRYPOINT ["/usr/lib/memgraph/memgraph"]
CMD [""]


FROM base as relwithdebinfo

USER root

ARG TARGETARCH
ARG PY_VERSION_DEFAULT=3.12
ARG MAGE_COMMIT
ARG BUILD_TYPE
ENV BUILD_TYPE=${BUILD_TYPE}
ENV PY_VERSION ${PY_VERSION_DEFAULT}
ENV MAGE_COMMIT=${MAGE_COMMIT}
ARG CUSTOM_MIRROR

# Add gdb
RUN apt-get update && apt-get install -y \
    gdb libc6-dbg \
    --no-install-recommends \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* 

# Copy entire mage repo
COPY --chown=memgraph:memgraph ./ /mage/

# Copy heaptrack and install it properly
COPY --from=builder /tmp/heaptrack /tmp/heaptrack
RUN cp -vr /tmp/heaptrack/* /usr/ && rm -rf /tmp/heaptrack

RUN if [ -n "$CUSTOM_MIRROR" ]; then \
      sed -E -i \
        -e "/^URIs:/ s#${CUSTOM_MIRROR}/ubuntu/#https://archive.ubuntu.com/ubuntu/#g" \
        -e "/^URIs:/ s#${CUSTOM_MIRROR}/ubuntu/#https://security.ubuntu.com/ubuntu/#g" \
        /etc/apt/sources.list.d/ubuntu.sources; \
    fi

USER memgraph
EXPOSE 7687

ENTRYPOINT ["/usr/lib/memgraph/memgraph"]
CMD [""]
