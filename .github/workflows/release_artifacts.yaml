name: 'Create release artifacts'

on:
  repository_dispatch:
    types: [trigger_update_index]

  workflow_dispatch:
    inputs:
      os:
        type: choice
        default: 'ubuntu-24.04'
        description: "Operating system to build the image for"
        required: true
        options:
          - "ubuntu-24.04"
      mage_version:
        type: string
        description: "Mage version built into this image (format: X.Y.Z)"
        required: true
      memgraph_version:
        type: string
        description: "Memgraph version built into this image (format: X.Y.Z)"
        required: true
      official_memgraph:
        type: boolean
        description: "Use the official Memgraph bucket?"
        default: false
      trigger_daily_packaging:
        type: boolean
        description: "Set to true to trigger the daily packaging jobs for testing purposes."
        default: false
jobs:
  SetupNames:
    if: ${{ github.ref_type != 'repository_dispatch' && github.event.inputs.trigger_daily_packaging == false }}
    runs-on: ["self-hosted", "X64"]
    outputs:
      download_link_base: ${{ steps.base_link.outputs.link }}
      download_binary_name_base: ${{ steps.binary_name.outputs.name }}
    env:
      s3_link_base: ${{ github.event.inputs.official_memgraph == 'true' && 'https://' || 'https://s3.eu-west-1.amazonaws.com' }}
      s3_bucket: ${{ github.event.inputs.official_memgraph == 'true' && 'download.memgraph.com' || 'deps.memgraph.io' }}
    steps:
      - name: Set base memgraph download link
        id: base_link
        run: |
          echo "link=${{ env.s3_link_base }}/${{ env.s3_bucket }}/memgraph/v${{ github.event.inputs.memgraph_version }}/${{ github.event.inputs.os }}" >> $GITHUB_OUTPUT
      - name: Set binary name base
        id: binary_name
        run: |
          version=${{ github.event.inputs.memgraph_version }}
          echo "name=memgraph_${version%%-*}-1" >> $GITHUB_OUTPUT

  DailyBuildVariables:
    if: ${{ github.ref_type == 'repository_dispatch' || github.event.inputs.trigger_daily_packaging }}
    runs-on: ["self-hosted"]
    outputs:
      mage_version: ${{ steps.compute.outputs.mage_version }}
      memgraph_version: ${{ steps.compute.outputs.memgraph_version }}
      build_date: ${{ steps.compute.outputs.build_date }}
      binary_name_base: ${{ steps.compute.outputs.binary_name_base }}
    steps:
      - name: Set up repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1

      - name: Compute variables using Python script
        id: compute
        run: |
          # Pass the client payload (as JSON) to the Python script.
          if [ "${{ github.ref_type }}" == "repository_dispatch" ]; then
            payload='${{ toJson(github.event.client_payload) }}'
          else
            # unless we trigger this manually
            payload=""
          fi
          echo "Received payload: $payload"
          read mage_version memgraph_version build_date < <(python3 daily_build_vars.py "$payload")
          echo "mage_version=${mage_version}" >> $GITHUB_OUTPUT
          echo "memgraph_version=${memgraph_version}" >> $GITHUB_OUTPUT
          echo "build_date=${build_date}" >> $GITHUB_OUTPUT
          binary_name_base=$(python3 -c "import urllib.parse; print(urllib.parse.quote('memgraph_' + '$memgraph_version' + '-1'))")
          echo "binary_name_base=${binary_name_base}" >> $GITHUB_OUTPUT
      
          # Print to console for debugging:
          echo "DEBUG: mage_version=${mage_version}"
          echo "DEBUG: memgraph_version=${memgraph_version}"
          echo "DEBUG: build_date=${build_date}"
          echo "DEBUG: binary_name_base=memgraph_${memgraph_version}-1"

  Artifact:
    needs: [SetupNames]
    strategy:
      fail-fast: false
      matrix:
        build_type: ["Release", "RelWithDebInfo"]
        build_arch: ["amd64", "arm64"]
        malloc: [false]
        include:
          - build_type: "RelWithDebInfo"
            rwid_ext: "-relwithdebinfo"
          - build_arch: "arm64"
            arm_ext: "-aarch64"
          - build_type: "Release"
            build_arch: "amd64"
            malloc: true
    uses: ./.github/workflows/reusable_package_mage.yaml
    with:
      arch: "${{ matrix.build_arch }}"
      mage_version: "${{ github.event.inputs.mage_version }}"
      mage_build_type: "${{ matrix.build_type }}"
      memgraph_version: "${{ github.event.inputs.memgraph_version }}"
      memgraph_download_link: "${{ needs.SetupNames.outputs.download_link_base }}${{ matrix.arm_ext }}${{ matrix.rwid_ext }}${{ matrix.malloc && '-malloc' || '' }}/${{ needs.SetupNames.outputs.download_binary_name_base }}_${{ matrix.build_arch }}.deb"
      shorten_tag: "true"
      force_release: "true"
      push_to_dockerhub: "false"
      push_to_s3: "true"
      s3_dest_bucket: "deps.memgraph.io"
      s3_dest_dir: "mage/v${{ github.event.inputs.mage_version}}"
      malloc: ${{ matrix.malloc }}
    secrets: inherit


  DailyBuildArtifact:
    needs: [DailyBuildVariables]
    strategy:
      fail-fast: false
      matrix:
        build_type: ["Release", "RelWithDebInfo"]
        build_arch: ["amd64", "arm64"]
        malloc: [false]
        include:
          - build_type: "RelWithDebInfo"
            rwid_ext: "-relwithdebinfo"
          - build_arch: "arm64"
            arm_ext: "-aarch64"
          - build_type: "Release"
            build_arch: "amd64"
            malloc: true
    uses: ./.github/workflows/reusable_package_mage.yaml
    with:
      arch: "${{ matrix.build_arch }}"
      mage_version: "${{ needs.DailyBuildVariables.outputs.mage_version }}"
      mage_build_type: "${{ matrix.build_type }}"
      memgraph_version: "${{ needs.DailyBuildVariables.outputs.memgraph_version }}"
      memgraph_download_link: "https://s3.eu-west-1.amazonaws.com/deps.memgraph.io/daily-build/memgraph/${{ needs.DailyBuildVariables.outputs.build_date }}/ubuntu-24.04${{ matrix.arm_ext }}${{ matrix.rwid_ext }}${{ matrix.malloc && '-malloc' || '' }}/${{ needs.DailyBuildVariables.outputs.binary_name_base }}_${{ matrix.build_arch }}.deb"
      shorten_tag: "false"
      force_release: "true"
      push_to_dockerhub: "false"
      push_to_s3: "true"
      s3_dest_bucket: "deps.memgraph.io"
      s3_dest_dir: "daily-build/mage/${{ needs.DailyBuildVariables.outputs.build_date }}"
      malloc: ${{ matrix.malloc }}
    secrets: inherit
