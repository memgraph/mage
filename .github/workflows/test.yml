name: Build and Test

env:
  PY_VERSION: '3.7'
  CORE_COUNT: '8'
  MAGE_CONTAINER: 'mage'

on: [pull_request, workflow_dispatch]

jobs:
  build-and-test-linux:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-18.04, ubuntu-20.04 ]
      max-parallel: 2
      fail-fast: true
    steps:
      - uses: actions/checkout@v2

      - name: Build Memgraph MAGE:prod and MAGE:dev images
        run: |
          DOCKER_BUILDKIT=1 docker build . -t memgraph-mage:prod --target prod
          DOCKER_BUILDKIT=1 docker build . -t memgraph-mage:dev --target dev

      - name: Run Memgraph MAGE:prod image
        run: |
          docker run -d -p 7687:7687 --name ${{ env.MAGE_CONTAINER }} memgraph-mage:prod --telemetry-enabled=False

      - name: Set up C++
        run: |
          sudo apt update
          sudo apt install -y build-essential cmake

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PY_VERSION }}

      - name: Build C++ modules
        run: |
          mkdir -p cpp/build
          cd cpp/build
          cmake ..
          make -j${{ env.CORE_COUNT }}

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./python/tests/requirements.txt
          pip install -r ./python/requirements.txt

      - name: Test End-to-end on prod
        env:
          PYTHONPATH: '$PWD/e2e'
        run: |
          cd e2e
          python -m pytest .

      - name: Stop prod mage container and remove it
        run: |
          docker stop ${{ env.MAGE_CONTAINER }}
          docker rm ${{ env.MAGE_CONTAINER }}

      - name: Run Memgraph MAGE dev image
        run: docker run -d -p 7687:7687 --name ${{ env.MAGE_CONTAINER }} memgraph-mage:dev --telemetry-enabled=False

      - name: C++ Modules unit tests
        run: |
          cd cpp/build
          ctest -j${{ env.CORE_COUNT }}

      - name: Python modules unit tests
        env:
          PYTHONPATH: '$PWD/python'
        run: |
          cd python
          python -m pytest .

      - name: Rust library tests
        run: |
          cd rust/rsmgp-sys
          cargo fmt -- --check
          cargo test

      - name: Test End-to-end on dev
        env:
          PYTHONPATH: '$PWD/e2e'
        run: |
          cd e2e
          python -m pytest .

  build-and-test-windows:
    strategy:
      matrix:
        os: [ windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - uses: Vampire/setup-wsl@v1
        with:
          distribution: Ubuntu-20.04

      - name: Build Memgraph MAGE:prod and MAGE:dev images
        shell: wsl-bash {0} # root shell
        run: |
          sudo apt update
          sudo apt install apt-transport-https ca-certificates curl software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable"
          apt-cache policy docker-ce
          sudo apt install docker-ce

          sudo docker build . -t memgraph-mage:prod --target prod
          sudo docker build . -t memgraph-mage:dev --target dev

      - name: Run Memgraph MAGE:prod image
        run: |
          docker run -d -p 7687:7687 --name ${{ env.MAGE_CONTAINER }} memgraph-mage:prod --telemetry-enabled=False

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PY_VERSION }}

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./python/tests/requirements.txt
          pip install -r ./python/requirements.txt

      - name: Test End-to-end on prod
        env:
          PYTHONPATH: '$PWD/e2e'
        run: |
          cd e2e
          python -m pytest .

      - name: Stop prod mage container and remove it
        run: |
          docker stop ${{ env.MAGE_CONTAINER }}
          docker rm ${{ env.MAGE_CONTAINER }}

      - name: Run Memgraph MAGE dev image
        run: docker run -d -p 7687:7687 --name ${{ env.MAGE_CONTAINER }} memgraph-mage:dev --telemetry-enabled=False

      - name: Python modules unit tests
        env:
          PYTHONPATH: '$PWD/python'
        run: |
          cd python
          python -m pytest .

      - name: Test End-to-end on dev
        env:
          PYTHONPATH: '$PWD/e2e'
        run: |
          cd e2e
          python -m pytest .

  build-and-test-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install docker
        run: |
            mkdir -p ~/.docker/machine/cache
            curl -Lo ~/.docker/machine/cache/boot2docker.iso https://github.com/boot2docker/boot2docker/releases/download/v19.03.12/boot2docker.iso
            brew install docker docker-machine

      - name: Build Memgraph MAGE:prod and MAGE:dev images
        run: |
          docker build . -t memgraph-mage:prod --target prod
          docker build . -t memgraph-mage:dev --target dev

      - name: Run Memgraph MAGE:prod image
        run: |
          docker run -d -p 7687:7687 --name ${{ env.MAGE_CONTAINER }} memgraph-mage:prod --telemetry-enabled=False

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PY_VERSION }}

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./python/tests/requirements.txt
          pip install -r ./python/requirements.txt

      - name: Test End-to-end on prod
        env:
          PYTHONPATH: '$PWD/e2e'
        run: |
          cd e2e
          python -m pytest .

      - name: Stop prod mage container and remove it
        run: |
          docker stop ${{ env.MAGE_CONTAINER }}
          docker rm ${{ env.MAGE_CONTAINER }}

      - name: Run Memgraph MAGE dev image
        run: docker run -d -p 7687:7687 --name ${{ env.MAGE_CONTAINER }} memgraph-mage:dev --telemetry-enabled=False


      - name: Test End-to-end on dev
        env:
          PYTHONPATH: '$PWD/e2e'
        run: |
          cd e2e
          python -m pytest .



