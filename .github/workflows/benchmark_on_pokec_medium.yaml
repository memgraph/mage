name: Run benchmark on pokec medium dataset

on:
  push:
    branches:
      - benchmarks-ci

  workflow_dispatch:
    inputs:
      mage_build_arch:
        type: choice
        description: "Mage build architecture"
        default: 'amd64'
        options:
          - "amd64"
          - "arm64"
      mage_build_scope:
        type: choice
        description: "Mage build scope"
        default: 'with ML'
        options:
          - "with ML"
          - "without ML"
      memgraph_branch:
        type: string
        description: "Memgraph branch to build from."
        default: "mage-benchmarks"
      mage_branch:
        type: string
        description: "Mage branch to build from."
        default: "main"

jobs:
  benchmark_on_pokec_medium:
    name: "Benchmark on pokec medium dataset"
    runs-on: ["self-hosted", "DockerMgBuild", "X64"] # amd64
    timeout-minutes: 120
    env:
      THREADS: 24
      MEMGRAPH_ENTERPRISE_LICENSE: ${{ secrets.MEMGRAPH_ENTERPRISE_LICENSE }}
      MEMGRAPH_ORGANIZATION_NAME: ${{ secrets.MEMGRAPH_ORGANIZATION_NAME }}
      OS: ubuntu-24.04
      TOOLCHAIN: v6
      ARCH: amd # TODO: allow arm
      BUILD_TYPE: Release
      MEMGRAPH_BRANCH: mage-benchmarks
      CONTAINER_NAME: mgbuild_v6_ubuntu-24.04

    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout specific branch in submodule
        run: |
          cd cpp/memgraph
          git fetch origin
          git checkout ${{ env.MEMGRAPH_BRANCH }}
          git pull

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Spin up mgbuild container
        run: |
          cd cpp/memgraph
          ./release/package/mgbuild.sh \
          --toolchain ${{ env.TOOLCHAIN }} \
          --os ${{ env.OS }} \
          --arch ${{ env.ARCH }} \
          run

      - name: Build Memgraph release binary
        run: |
          docker exec -i -u root "${{ env.CONTAINER_NAME }}" bash -c "
            cd /home/mg && 
            rm -rf memgraph &&
            git clone --branch ${{ env.MEMGRAPH_BRANCH }} --single-branch https://github.com/memgraph/memgraph.git &&
            cd memgraph &&
            source /opt/toolchain-v6/activate &&
            (./init || true) &&
            cd build &&
            cmake -DCMAKE_BUILD_TYPE=Release .. &&
            make -j$(nproc)
          "

      - name: Package Memgraph release binary
        run: |
          cd cpp/memgraph
          ./release/package/mgbuild.sh \
          --toolchain ${{ env.TOOLCHAIN }} \
          --os ${{ env.OS }} \
          --arch ${{ env.ARCH }} \
          package-memgraph

      - name: "Copy package"
        run: |
          cd cpp/memgraph
          ./release/package/mgbuild.sh \
          --toolchain ${{ env.TOOLCHAIN }} \
          --os ${{ env.OS }} \
          --arch ${{ env.ARCH }} \
          copy \
          --package \
          --dest-dir ../../.

      - name: Build mage container
        run: |
          echo "Pretend to build mage container"

      - name: Run benchmarks
        run: |
          echo "Pretend to run benchmarks"

      - name: "Stop mgbuild container"
        if: always()
        run: |
          cd cpp/memgraph
          ./release/package/mgbuild.sh \
          --toolchain ${{ env.TOOLCHAIN }} \
          --os ${{ env.OS }} \
          --arch ${{ env.ARCH }} \
          stop --remove
